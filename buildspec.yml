version: 0.2

phases:
  install:
    runtime-versions:
      php: 8.2
    commands:
      - apt-get update -y
      - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
      - apt-get install -y libpq-dev libzip-dev
      - apt-get install -y php-pgsql
      - apt-get install -y sqlite3 libsqlite3-dev
      - curl -sS https://getcomposer.org/installer -o composer-setup.php
      - php composer-setup.php --install-dir=/usr/local/bin --filename=composer
  pre_build:
    commands:
      - composer dump-autoload
      - composer install --no-interaction --no-progress --prefer-dist
      - cp .env.example .env
      - npm install
      - mkdir -p storage/framework/views
      - chmod -R 777 storage
      - echo Preparing storage directories...
      - mkdir -p /codebuild/output/src/$CODEBUILD_SRC_DIR/storage/framework/{sessions,views,cache}
      - mkdir -p /codebuild/output/src/$CODEBUILD_SRC_DIR/bootstrap/cache
      - chmod -R 777 /codebuild/output/src/$CODEBUILD_SRC_DIR/storage
      - chmod -R 777 /codebuild/output/src/$CODEBUILD_SRC_DIR/bootstrap/cache
  post_build:
    commands:
      - echo "Deployment phase ensuring directories and permissions..."
      - mkdir -p /var/app/current/storage/framework/{sessions,views,cache}
      - mkdir -p /var/app/current/bootstrap/cache
      - chmod -R 777 /var/app/current/storage /var/app/current/bootstrap/cache

  build:
    commands:
      - php artisan key:generate
      - php artisan config:cache
      - php artisan route:cache
      - php artisan view:cache
artifacts:
  files:
    - '**/*'
    - storage/logs/*.log
    - public/**/*
  name: $(date +%Y-%m-%d)
proxy:
  upload-artifacts: yes
  logs: yes
